import z from 'zod'
import type { ApiSchema } from './types'

export default {
  // https://spoonacular.com/food-api/docs#Search-Recipes-Complex
  searchRecipes: {
    url: '/recipes/complexSearch',
    method: 'get',
    query: z.object({
      query: z.string(),
      cuisine: z.string().optional(),
      excludeCuisine: z.string().optional(),
      diet: z.string().optional(),
      intolerances: z.string().optional(),
      equipment: z.string().optional(),
      includeIngredients: z.string().optional(),
      excludeIngredients: z.string().optional(),
      type: z.string().optional(),
      instructionsRequired: z.boolean().optional(),
      fillIngredients: z.boolean().optional(),
      addRecipeInformation: z.boolean().optional(),
      addRecipeInstructions: z.boolean().optional(),
      addRecipeNutrition: z.boolean().optional(),
      author: z.string().optional(),
      tags: z.string().optional(),
      recipeBoxId: z.number().optional(),
      titleMath: z.string().optional(),
      maxReadyTime: z.number().optional(),
      minServings: z.number().optional(),
      maxServings: z.number().optional(),
      ignorePantry: z.boolean().optional(),
      sort: z.string().optional(),
      sortDirection: z.string().optional(),
      minCarbs: z.number().optional(),
      minProtein: z.number().optional(),
      maxProtein: z.number().optional(),
      minCalories: z.number().optional(),
      maxCalories: z.number().optional(),
      minFat: z.number().optional(),
      maxFat: z.number().optional(),
      minAlcohol: z.number().optional(),
      maxAlcohol: z.number().optional(),
      minCaffeine: z.number().optional(),
      maxCaffeine: z.number().optional(),
      minCopper: z.number().optional(),
      maxCopper: z.number().optional(),
      minCalcium: z.number().optional(),
      maxCalcium: z.number().optional(),
      minCholine: z.number().optional(),
      maxCholine: z.number().optional(),
      minCholesterol: z.number().optional(),
      maxCholesterol: z.number().optional(),
      minFluoride: z.number().optional(),
      maxFluoride: z.number().optional(),
      minSaturatedFat: z.number().optional(),
      maxSaturatedFat: z.number().optional(),
      minVitaminA: z.number().optional(),
      maxVitaminA: z.number().optional(),
      minVitaminC: z.number().optional(),
      maxVitaminC: z.number().optional(),
      minVitaminD: z.number().optional(),
      maxVitaminD: z.number().optional(),
      minVitaminE: z.number().optional(),
      maxVitaminE: z.number().optional(),
      minVitaminK: z.number().optional(),
      maxVitaminK: z.number().optional(),
      minVitaminB1: z.number().optional(),
      maxVitaminB1: z.number().optional(),
      minVitaminB2: z.number().optional(),
      maxVitaminB2: z.number().optional(),
      minVitaminB5: z.number().optional(),
      maxVitaminB5: z.number().optional(),
      minVitaminB3: z.number().optional(),
      maxVitaminB3: z.number().optional(),
      minVitaminB6: z.number().optional(),
      maxVitaminB6: z.number().optional(),
      minVitaminB12: z.number().optional(),
      maxVitaminB12: z.number().optional(),
      minFiber: z.number().optional(),
      maxFiber: z.number().optional(),
      minFolate: z.number().optional(),
      maxFolate: z.number().optional(),
      minFolicAcid: z.number().optional(),
      maxFolicAcid: z.number().optional(),
      minIodine: z.number().optional(),
      maxIodine: z.number().optional(),
      minIron: z.number().optional(),
      maxIron: z.number().optional(),
      minMagnesium: z.number().optional(),
      maxMagnesium: z.number().optional(),
      minManganese: z.number().optional(),
      maxManganese: z.number().optional(),
      minPhosphorus: z.number().optional(),
      maxPhosphorus: z.number().optional(),
      minPotassium: z.number().optional(),
      maxPotassium: z.number().optional(),
      minSelenium: z.number().optional(),
      maxSelenium: z.number().optional(),
      minSodium: z.number().optional(),
      maxSodium: z.number().optional(),
      minSugar: z.number().optional(),
      maxSugar: z.number().optional(),
      minZinc: z.number().optional(),
      maxZinc: z.number().optional(),
      offset: z.number().optional(),
      number: z.number().optional(),
      limitLicense: z.boolean().optional()
    }),
    response: z.object({
      results: z.array(z.object({
        id: z.number(),
        title: z.string(),
        image: z.string(),
        imageType: z.string()
      })),
      offset: z.number(),
      number: z.number(),
      totalResults: z.number()
    })
  }
} as const satisfies ApiSchema
